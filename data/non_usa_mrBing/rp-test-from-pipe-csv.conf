input {
  file {
    path => "/Users/binghan/sandbox/fedex/tnt/rp-nonusa-5000.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  csv {
    separator => "|"
    columns => [
      "oid_nbr",
      "version_id_nbr",
      "last_modification_tmstp",
      "name_nm",
      "contact_nm",
      "aka_name_nm",
      "address_one_desc",
      "address_two_desc",
      "address_three_desc",
      "city_nm",
      "state_province_nm",
      "country_nm",
      "effective_dt",
      "expiration_dt",
      "source_url_nm",
      "source_list_nm",
      "source_list_full_nm",
      "source_agency_nm",
      "source_country_nm",
      "source_country_full_nm",
      "customs_area_cd",
      "ignored_party_flg"
    ]
  }
}

filter {

  mutate {
     add_field => { "name_idx" => "%{name_nm}" }
  }

  mutate {
    gsub => [
      "name_idx", "[^a-zA-Z0-9]", " ",
      "name_idx", "\s\s+", " "
    ]
  }

  mutate {
    add_field => { "name_temp" => "%{name_idx}" }
    add_field => { "source_information_url" => "%{source_url_nm}" }
    add_field => { "alt_names" => [] }
  }

  mutate {
    split => { "name_temp" => " " }
  }

  ruby {
      code => "
        temp = event.get('name_temp')
        temp_rev = temp.reverse
        event.set('name_rev', temp_rev.join(' '))
        event.set('name_no_ws', temp.join(''))
        event.set('name_no_ws_rev', temp_rev.join(''))
      "
  }

  if [aka_name_nm] {
    mutate {
      add_field => { "alt_names" => "%{aka_name_nm}" }
      add_field => { "alt_idx" => "%{aka_name_nm}" }
    }

    mutate {
      split => {
        "alt_names" => ","
        "alt_idx" => ","
      }
    }

    ruby {
        code => "
          event.set('alt_names', event.get('alt_names').uniq)
          alt_idx_temp = event.get('alt_idx')
          if alt_idx_temp
            event.set('alt_idx', alt_idx_temp.collect { |name|
              name.gsub(/[^a-zA-Z0-9]/, ' ').gsub('/\s\s+/', ' ')
            }.uniq!)

            alt_idx_temp = event.get('alt_idx')
            if alt_idx_temp
              event.set('alt_rev', alt_idx_temp.collect { |name|
                name.split(' ').reverse.join(' ')
              }.uniq)
              event.set('alt_no_ws', alt_idx_temp.collect { |name|
                name.split(' ').join('')
              }.uniq)

              alt_rev_temp = event.get('alt_rev')
              event.set('alt_no_ws_rev', alt_rev_temp.collect { |name|
                name.split(' ').join('')
              }.uniq)
            end
          end
        "
    }
  }


  ruby {
      code => "
        one = event.get('address_one_desc')
        two = event.get('address_two_desc')
        three = event.get('address_three_desc')
        firstline = nil
        if one or two or three
          firstline = [one, two, three].compact.join(',')
        end
        addr = {
          'address' => firstline,
          'city' => event.get('city_nm'),
          'state' => event.get('state_province_nm'),
          'country' => event.get('country_nm'),
          'postal_code' => event.get('postal_code')
        }
        event.set('addresses', [addr])
        event.set('nationalities', [])
        event.set('citizenships', [])
        event.set('dates_of_birth',[])
        event.set('places_of_birth',[])
        event.set('ids', [])
        event.set('programs', [])
        event.set('remarks', [])
        event.set('title', nil)
      "
  }

  ruby {
    code => "
      event.set('source', {
        'full_name' => 'Non US List',
        'code' => 'NON_USA'
      })
      event.set('type', 'Individual')
    "
  }


  mutate {
    rename => { "name_nm" => "name" }
    rename => { "contact_nm" => "contact_name" }
    rename => { "country_nm" => "country" }
    rename => { "effective_dt" => "start_date" }
    rename => { "expiration_dt" => "end_date"}
    rename => { "source_agency_nm" => "source_agency_name" }
    rename => { "source_url_nm" => "source_list_url" }
    rename => { "source_country_full_nm" => "source_country_full_name"}
    rename => { "source_country_nm" => "source_country_name"}
    rename => { "source_list_nm" => "source_list_name" }
    rename => { "source_list_full_nm" => "source_list_full_name" }
    rename => { "oid_nbr" => "entity_number" }
    rename => { "@timestamp" => "_updated_at" }
  }

  mutate {
    remove_field => [
      "address_one_desc",
      "address_two_desc",
      "address_three_desc",
      "aka_name_nm",
      "city_nm",
      "state_province_nm",
      "@version",
      "name_temp",
      "message"
    ]
  }
}


output {
  stdout { codec => rubydebug }
  elasticsearch {
    hosts => "http://localhost:9200"
    index => "development:webservices:screening_list:non_usas"
    document_type => "screening_list:non_usa"
    document_id => "%{entity_number}"
  }
}
